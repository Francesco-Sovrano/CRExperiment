~~~~0L-CustomerManagementSystem/src/main.py
    class EmployeeManagementSystem:
        def __init__(self):
            self.employees = []

        def add_employee(self, employee):
            self.employees.append(employee)

        def remove_employee(self, employee):
            if employee in self.employees:
                self.employees.remove(employee)

        def get_employee_count(self):
            return len(self.employees)

        def get_employee_by_id(self, employee_id):
            for employee in self.employees:
                if employee.id == employee_id:
                    return employee
            return None

        def get_employees_by_department(self, department):
            department_employees = []
            for employee in self.employees:
                if employee.department == department:
                    department_employees.append(employee)
            return department_employees

        def print_employee_details(self):
            for employee in self.employees:
                print("Employee ID:", employee.id)
                print("Name:", employee.name)
                print("Department:", employee.department)
                print("Salary:", employee.salary)
                print("=====================")
~~~~

~~~~0R-CustomerManagementSystem/src/main.py
    class EmployeeManagementSystem:
        def __init__(self):
            self.employees = []

        def add_employee(self, employee):
            self.employees.append(employee)

        def remove_employee(self, employee):
            if employee in self.employees:
                self.employees.remove(employee)

        def get_employee_count(self):
            return len(self.employees)

        def get_employee_by_id(self, employee_id):
            for employee in self.employees:
                if employee.id == employee_id:
                    return employee
            return None

        def get_employees_by_department(self, department):
            department_employees = []
            for employee in self.employees:
                if employee.department == department:
                    department_employees.append(employee)
            return department_employees

        def print_employee_details(self):
            for employee in self.employees:
                print("Employee ID:", employee.id)
                print("Name:", employee.name)
                print("Department:", employee.department)
                print("Salary:", employee.salary)
                print("=====================")
                """
        Subsequences


        Input:
            a: An int
            b: An int
            k: A positive int

        Output:
            A list of all length-k ascending sequences of ints in range(a, b)

        Example:
            >>> subsequences(a=1, b=5, k=3)
            [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]
            >>> subsequences(a=1, b=5, k=1)
            [[]]
        """
        def subsequences(a, b, k):
            ret = []
            for i in range(a, b + 1 - k):
                ret.extend(
                    [i] + rest for rest in subsequences(i + 1, b, k - 1)
                )
            return ret
*****Alice-Add a check when k is zero-54-0-1-3-Alice
- ret = []
+ ret = []
+ if k == 0:
+ 	 return []
*****
~~~~

